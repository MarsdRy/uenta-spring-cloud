spring:
  application:
    name: uenta-registry-server
  rabbitmq:
    host: ${RABBITMQ_HOSTNAME_EAST_1A:192.168.0.164}
#    port: 15672
#    addresses: 
    username: guest
    password: guest
#    virtualhost: 
#    dynamic: 

---
spring:
  # 指定profile=ha-east-1a
  profiles: ha-east-1a

server:
  port: 7000
  address: 0.0.0.0

eureka:
  server:
#    enableSelfPreservation: false #设为false , 关闭自我保护
#    evictionIntervalTimerInMs: 4000 # 清理间隔（单位毫秒，默认是60*1000）
  instance:
    # 指定当profile=ha-east-1a时，主机名是master
    hostname: ${REGISTRY_HOSTNAME_EAST_1A:192.168.0.164}
    prefer-ip-address: true
    metadata-map:
      instanceId: ${spring.application.name}:${random.value}
#    leaseRenewalIntervalInSeconds: 10 #测试使用
#    leaseExpirationDurationInSeconds: 30 
  client:
    registerWithEureka: false   #测试使用 false
    fetchRegistry: false        #测试使用 false
    server:
      waitTimeInMsWhenSyncEmpty: 0
    serviceUrl:
      # 将自己注册到backup这个eureka上面去
      defaultZone: http://${security.user.name}:${security.user.password}@${REGISTRY_HOSTNAME_EAST_1B:192.168.0.164}:7001/eureka/
    healthcheck: #只应该在application.yml中设置。如果设置在bootstrap.yml中将会导致一些不良的副作用，例如在Eureka中注册的应用名称是UNKNOWN等。
      enabled: true

security:
  basic:
    enabled: true               # 开启基于HTTP basic的认证
  user:
    name: ${REGISTRY_SERVER_USER:user}                  # 配置登录的账号是user
    password: ${REGISTRY_SERVER_PASSWORD:password}       # 配置登录的密码是password

---
spring:
  # 指定profile=ha-east-1b
  profiles: ha-east-1b

server:
  port: 7001
  address: 0.0.0.0

eureka:
  server:
#    enableSelfPreservation: false #设为false , 关闭自我保护
#    evictionIntervalTimerInMs: 4000 # 清理间隔（单位毫秒，默认是60*1000）
  instance:
    # 指定当profile=ha-east-1b时，主机名是backup
    hostname: ${REGISTRY_HOSTNAME_EAST_1B:192.168.0.164}
    prefer-ip-address: true
    metadata-map:
      instanceId: ${spring.application.name}:${random.value}
#    leaseRenewalIntervalInSeconds: 10 #测试使用
#    leaseExpirationDurationInSeconds: 30
  client:
    registerWithEureka: false   #测试使用 false
    fetchRegistry: false        #测试使用 false
    server:
      waitTimeInMsWhenSyncEmpty: 0
    serviceUrl:
      defaultZone: http://${security.user.name}:${security.user.password}@${REGISTRY_HOSTNAME_EAST_1A:192.168.0.164}:7000/eureka/
    healthcheck: #只应该在application.yml中设置。如果设置在bootstrap.yml中将会导致一些不良的副作用，例如在Eureka中注册的应用名称是UNKNOWN等。
      enabled: true

security:
  basic:
    enabled: true               # 开启基于HTTP basic的认证
  user:
    name: ${REGISTRY_SERVER_USER:user}                   # 配置登录的账号是user
    password: ${REGISTRY_SERVER_PASSWORD:password}       # 配置登录的密码是password

